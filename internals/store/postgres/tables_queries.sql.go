// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tables_queries.sql

package tablesclea

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTable = `-- name: CreateTable :one
INSERT INTO tables  (id, created_by, table_code, name, restaurant_name, status, menu_url, members, closed_at )
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9 )
RETURNING id, created_by, table_code, name, restaurant_name, status, menu_url, members, created_at, updated_at, closed_at
`

type CreateTableParams struct {
	ID             pgtype.UUID        `json:"id"`
	CreatedBy      pgtype.UUID        `json:"created_by"`
	TableCode      string             `json:"table_code"`
	Name           pgtype.Text        `json:"name"`
	RestaurantName pgtype.Text        `json:"restaurant_name"`
	Status         string             `json:"status"`
	MenuUrl        pgtype.Text        `json:"menu_url"`
	Members        []int32            `json:"members"`
	ClosedAt       pgtype.Timestamptz `json:"closed_at"`
}

func (q *Queries) CreateTable(ctx context.Context, arg CreateTableParams) (Tables, error) {
	row := q.db.QueryRow(ctx, createTable,
		arg.ID,
		arg.CreatedBy,
		arg.TableCode,
		arg.Name,
		arg.RestaurantName,
		arg.Status,
		arg.MenuUrl,
		arg.Members,
		arg.ClosedAt,
	)
	var i Tables
	err := row.Scan(
		&i.ID,
		&i.CreatedBy,
		&i.TableCode,
		&i.Name,
		&i.RestaurantName,
		&i.Status,
		&i.MenuUrl,
		&i.Members,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ClosedAt,
	)
	return i, err
}
